(* Aya Salama, Annanya Jain*)
(* Add exercise 3 *)


let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in let and = proc(x) {
    proc(y) {
        if x 
        then 
            if y 
            then zero?(0) 
            else zero?(1) 
        else zero?(1) 
    }
}
in let add_bt = proc(t) {
  proc(e){
    letrec add_helper (h) = 
      if h.data=e 
      then 0 
      else 
        if ((and (number?(h.left))) (h.data>>e))
        then let nd = { data <= e; left <= 0; right <= 0 } in h.left <= nd
        else if ((and (number?(h.right))) (h.data<<e))
            then let nd = { data <= e; left <= 0; right <= 0 } in h.right <= nd
            else if h.data>>e
                 then (add_helper h.left)
                 else (add_helper h.right)
    in (add_helper t.root)
  }
}
in begin
     ((add_bt t1) 23);
     t1.length <= t1.length+1;
     debug(t1)		
   end